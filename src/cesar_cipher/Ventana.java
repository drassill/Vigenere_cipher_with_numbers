/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cesar_cipher;
import java.awt.event.ActionEvent;
import java.awt.event.MouseEvent;
import java.util.*;
import java.util.ArrayList;
import javax.swing.*;
import java.awt.event.ActionListener;
/**
 *
 * @author ivan
 */

public class Ventana extends javax.swing.JFrame {
  public static ArrayList<String> vigenere = new ArrayList<String>(Arrays.asList("a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","0","1","2","3","4","5","6","7","8","9"));
  public static ArrayList<String> VIGENERE = new ArrayList<String>(Arrays.asList("A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","0","1","2","3","4","5","6","7","8","9"));
    /**
     * Creates new form Ventana
     */
    public Ventana() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Encode = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Texto = new javax.swing.JTextArea();
        jTextField1 = new javax.swing.JTextField();
        Decode = new javax.swing.JButton();
        Etiqueta = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Vigenere Encode&Decoder");
        setMinimumSize(new java.awt.Dimension(780, 560));

        Encode.setText("Encode");
        Encode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Encode_click(evt);
            }
        });

        Texto.setColumns(20);
        Texto.setRows(5);
        Texto.setInheritsPopupMenu(true);
        Texto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                texto_click(evt);
            }
        });
        jScrollPane1.setViewportView(Texto);

        Decode.setText("Decode");
        Decode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DecodeEncode_click(evt);
            }
        });

        Etiqueta.setText("CLAVE");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Etiqueta)
                .addGap(18, 18, 18)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Encode, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Decode, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(132, 132, 132))
            .addGroup(layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 612, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 282, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Encode)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Decode)
                    .addComponent(Etiqueta))
                .addGap(175, 175, 175))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Encode_click(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Encode_click
        try
        {
        if (Texto.getText().isEmpty() || jTextField1.getText().isEmpty())
        {
            Excepecion exc=new Excepecion();
            exc.setSize(550, 100);
            exc.setLocation(400, 400);
            exc.setVisible(true);
            return;
        }
        char[] array=Texto.getText().toCharArray();
        String palabra;
        String frase="";
        int pos;
        String clave1=jTextField1.getText();
        char[] clavearray=clave1.toCharArray();
        String clave2="";
        int x=0;
        for (int i=0;i<array.length;i++)
        {
            if (Character.isAlphabetic(array[i]) || Character.isDigit(array[i]))
            {
                clave2+=clavearray[x];
                x++;
            }
            else
            {
                clave2+=' ';
            }
            if (x == clavearray.length){x=0;}
        }
        clavearray=clave2.toCharArray();
        for (int i=0;i<array.length;i++)
        {
            String letra=Character.toString(array[i]);
            String palabraclave=Character.toString(clavearray[i]);
            if (VIGENERE.indexOf(letra) ==-1 && vigenere.indexOf(letra) == -1){palabra=letra;}
            else if (vigenere.indexOf(letra) != -1)
            {
                if (vigenere.indexOf(palabraclave) != -1)
                {
                    pos=vigenere.indexOf(letra)+vigenere.indexOf(palabraclave);
                }
                else
                {
                    pos=vigenere.indexOf(letra)+VIGENERE.indexOf(palabraclave);
                }
                while(pos > 35){pos-=36;}
                while (pos <0){pos+=36;}
                palabra=vigenere.get(pos);
            }
            else
            {
                if (vigenere.indexOf(palabraclave) != -1)
                {
                    pos=VIGENERE.indexOf(letra)+vigenere.indexOf(palabraclave);
                }
                else
                {
                    pos=VIGENERE.indexOf(letra)+VIGENERE.indexOf(palabraclave);
                }
                while(pos >= 35){pos-=35;}
                while (pos <0){pos+=36;}
                palabra=VIGENERE.get(pos);
            }
        frase+=palabra;
        }
        Texto.setText(frase);
        }
        catch(Exception ex)
        {
            Excepecion exc=new Excepecion();
            exc.setSize(550, 100);
            exc.setLocation(400, 400);
            exc.setVisible(true);
        }
                
    }//GEN-LAST:event_Encode_click

    private void texto_click(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_texto_click
        if (evt.getButton()== MouseEvent.BUTTON3)
        {
            JMenuItem menuItem;
            ActionListener actionListener;
            actionListener = new ActionListener() 
            {
                public void actionPerformed(ActionEvent event) {
                    if (event.getActionCommand().equals("Cortar"))
                    {
                        Texto.cut();
                    }
                    else if (event.getActionCommand().equals("Copiar"))
                    {
                        Texto.copy();
                    }
                    else if (event.getActionCommand().equals("Pegar"))
                    {
                        Texto.paste();
                    }
                    else if (event.getActionCommand().equals("Eliminar"))
                    {
                        Texto.setText("");
                    }
                }
            };
            JPopupMenu popup=new JPopupMenu();
            menuItem = new JMenuItem("Cortar");
            menuItem.addActionListener(actionListener);
            popup.add(menuItem);
            menuItem  = new JMenuItem("Copiar");
            menuItem.addActionListener(actionListener);
            popup.add(menuItem);
            menuItem  = new JMenuItem("Pegar");
            menuItem.addActionListener(actionListener);
            popup.add(menuItem);
            menuItem  = new JMenuItem("Eliminar");
            menuItem.addActionListener(actionListener);
            popup.add(menuItem);                        
            popup.show(evt.getComponent(), evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_texto_click

    private void DecodeEncode_click(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DecodeEncode_click
        try
        {
        if (Texto.getText().isEmpty() || jTextField1.getText().isEmpty())
        {
            Excepecion exc=new Excepecion();
            exc.setSize(550, 100);
            exc.setLocation(400, 400);
            exc.setVisible(true);
            return;
        }
        char[] array=Texto.getText().toCharArray();
        String palabra;
        String frase="";
        int pos;
        String clave1=jTextField1.getText();
        char[] clavearray=clave1.toCharArray();
        String clave2="";
        int x=0;
        for (int i=0;i<array.length;i++)
        {
            if (Character.isAlphabetic(array[i]) || Character.isDigit(array[i]))
            {
                clave2+=clavearray[x];
                x++;
            }
            else
            {
                clave2+=' ';
            }
            if (x == clavearray.length){x=0;}
        }
        clavearray=clave2.toCharArray();
        for (int i=0;i<array.length;i++)
        {
            String letra=Character.toString(array[i]);
            String palabraclave=Character.toString(clavearray[i]);
            if (VIGENERE.indexOf(letra) ==-1 && vigenere.indexOf(letra) == -1){palabra=letra;}
            else if (vigenere.indexOf(letra) != -1)
            {
                if (vigenere.indexOf(palabraclave) != -1)
                {
                    pos=vigenere.indexOf(letra)-vigenere.indexOf(palabraclave);
                }
                else
                {
                    pos=vigenere.indexOf(letra)-VIGENERE.indexOf(palabraclave);
                }
                while(pos > 35){pos-=36;}
                while (pos <0){pos+=36;}
                palabra=vigenere.get(pos);
            }
            else
            {
                if (vigenere.indexOf(palabraclave) != -1)
                {
                    pos=VIGENERE.indexOf(letra)-vigenere.indexOf(palabraclave);
                }
                else
                {
                    pos=VIGENERE.indexOf(letra)-VIGENERE.indexOf(palabraclave);
                }
                while(pos >= 35){pos-=35;}
                while (pos <0){pos+=36;}
                palabra=VIGENERE.get(pos);
            }
        frase+=palabra;
        }
        Texto.setText(frase);
        }
        catch(Exception ex)
        {
            Excepecion exc=new Excepecion();
            exc.setSize(550, 100);
            exc.setLocation(400, 400);
            exc.setVisible(true);
        }
    }//GEN-LAST:event_DecodeEncode_click

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventana().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Decode;
    private javax.swing.JButton Encode;
    private javax.swing.JLabel Etiqueta;
    private javax.swing.JTextArea Texto;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
